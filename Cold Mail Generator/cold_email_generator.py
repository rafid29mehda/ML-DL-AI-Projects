# -*- coding: utf-8 -*-
"""Cold Email Generator.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1713ZUz0emLGkzRbzsWzQSiQ0wJmPWHZe
"""

!pip install langchain-groq chromadb langchain langchain_community
import langchain

from langchain_groq import ChatGroq

llm = ChatGroq(
    temperature=0,
    groq_api_key='gsk_9j4Ef3Q0e8aZT8dbswfg46udcbgswrtauabqwt675rws',
    model_name="llama-3.1-70b-versatile"
)
response = llm.invoke("The first president of Bangladesh ...")
print(response.content)

from langchain_community.document_loaders import WebBaseLoader

loader = WebBaseLoader("https://careers.bat.com/job/bangladesh/expression-of-interest-territory-officer/27325/16749958016")
page_data = loader.load().pop().page_content
print(page_data)

from langchain_core.prompts import PromptTemplate

prompt_extract = PromptTemplate.from_template(
        """
        ### SCRAPED TEXT FROM WEBSITE:
        {page_data}
        ### INSTRUCTION:
        The scraped text is from the career's page of a website.
        Your job is to extract the job postings and return them in JSON format containing the
        following keys: `role`, `experience`, `skills` and `description`.
        Only return the valid JSON.
        ### VALID JSON (NO PREAMBLE):
        """
)

chain_extract = prompt_extract | llm
res = chain_extract.invoke(input={'page_data':page_data})
type(res.content)

from langchain_core.output_parsers import JsonOutputParser

json_parser = JsonOutputParser()
json_res = json_parser.parse(res.content)
json_res

type(json_res)

import pandas as pd
from google.colab import files

uploaded = files.upload()

file_name = list(uploaded.keys())[0]
df = pd.read_csv(file_name)

df

import uuid
import chromadb

client = chromadb.PersistentClient('vectorstore')
collection = client.get_or_create_collection(name="portfolio")

if not collection.count():
    for _, row in df.iterrows():
        collection.add(documents=row["Techstack"],
                       metadatas={"links": row["Links"]},
                       ids=[str(uuid.uuid4())])

links = collection.query(query_texts=["Experience in DevOps"], n_results=2).get('metadatas', [])
links

prompt_email = PromptTemplate.from_template(
        """
        ### JOB DESCRIPTION:
        {job_description}

        ### INSTRUCTION:
        You are Rafid, a business development executive at Dohatec. Dohatec is an AI & Software Consulting company dedicated to facilitating
        the seamless integration of business processes through automated tools.
        Over our experience, we have empowered numerous enterprises with tailored solutions, fostering scalability,
        process optimization, cost reduction, and heightened overall efficiency.
        Your job is to write a cold email to the client regarding the job mentioned above describing the capability of Dohatec
        in fulfilling their needs.
        Also add the most relevant ones from the following links to showcase Dohatec's portfolio: {link_list}
        Remember you are Rafid, BDE at Dohatec.
        Do not provide a preamble.
        ### EMAIL (NO PREAMBLE):

        """
        )

chain_email = prompt_email | llm
res = chain_email.invoke({"job_description": str(job), "link_list": links})
print(res.content)

